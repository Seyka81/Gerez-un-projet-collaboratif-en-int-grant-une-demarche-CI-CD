name: CI-CD backend

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "back/**"
      - ".github/workflows/backend.yml"

jobs:
  tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests and generate Jacoco report
        run: mvn clean test jacoco:report

      - name: Upload Jacoco report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco
          retention-days: 1

  code-quality-analysis:
    needs: tests
    name: Backend Code Quality Analysis with SonarCloud
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"

      - name: Download Jacoco report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

      - name: SonarCloud Scan
        run: mvn verify sonar:sonar -Dsonar.qualitygate.wait=true -Dsonar.projectName=Gerez-un-projet-collaboratif-en-int-grant-une-demarche-ci-cd-backend -Dsonar.projectKey=openclassroomseyka_gerez-un-projet-collaboratif-en-int-grant-une-demarche-ci-cd-backend -Dsonar.organization=openclassroomseyka -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN_BACK }}

  deploy-images:
    needs: code-quality-analysis
    name: Deploy Backend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/gerez-un-projet-collaboratif-en-int-grant-une-demarche-ci-cd-backend:latest
